<?php
$_quote = $this->getMethod()->getInfoInstance()->getQuote();
?>
<div class="paynova-ssn-container">
    <input type="text" nam="payment[<?php echo $this->getMethod()->getCode() ?>][government_id]">
    <button name="getaddress-button" onclick="paynovaGetAddress(this);" type="button"><?php echo $this->__('Get Address') ?></button>
    <div class="address"></div>
</div>

<script>
    if (!('paynovaGetAddress' in window)) {
        function paynovaGetAddress(el) {
            var input = $(el).up('div').down('input');
            var governmentId = $(input).getValue();

            // Default to the quote country code for multi page checkouts,
            // otherwise use the selected billing country code
            var countryCode = <?php echo $this->helper('core')->jsonEncode($_quote->getBillingAddress()->getCountryCode()) ?>;
            var billingCountry = $('billing:country_id');
            if (billingCountry) {
                countryCode = $(billingCountry).getValue();
            }

            new Ajax.Request('<?php echo $this->getUrl('made_paynova/utility/getAddresses', array('_secure' => true)) ?>',
                {
                    method: 'post',
                    parameters: {
                        'country_code': countryCode,
                        'government_id': governmentId,
                        method: window.payment.currentMethod
                    },
                    onComplete: function (transport) {
                        var obj = transport.responseJSON;
                        var addressDiv = $(input).up('div').down('div');
                        if (obj.status.isSuccess === false) {
                            var html = '';
                            for (var i = 0; i < obj.status.errors.length; i++) {
                                html += obj.status.errors[i].message + '<br>';
                            }
                            $(addressDiv).update(html);
                        } else {
                            var addressFieldMap = {
                                'address': [
                                    ['city', 'billing:city'],
                                    ['countryCode', 'billing:country_id'],
                                    ['postalCode', 'billing:zip'],
                                    ['regionCode', 'billing:region_id'],
                                    ['street1', 'billing:street1']
                                ],
                                'name': [
                                    ['company', 'billing:company'],
                                    ['firstName', 'billing:firstname'],
                                    ['lastName', 'billing:lastname']
                                ]
                            };
                            var address = obj.addresses[0];
                            for (var key in addressFieldMap) {
                                for (var i = 0; i < addressFieldMap[key].length; i++) {
                                    var fieldPair = addressFieldMap[key][i];
                                    var paynovaKey = fieldPair[0];
                                    var htmlField = fieldPair[1];
                                    var paynovaValue = address[key][paynovaKey];
                                    if ($(htmlField)) {
                                        $(htmlField).setValue(paynovaValue);
                                    }
                                }
                            }
                        }
                    }
                });
        };
    }
</script>